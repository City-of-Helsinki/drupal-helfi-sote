<?php

/**
 * @file
 * Contains helfi_sote.
 */

declare(strict_types=1);

use Drupal\helfi_platform_config\DTO\ParagraphTypeCollection;

/**
 * Implements hook_preprocess_HOOK().
 */
function helfi_sote_preprocess_tpr_unit(array &$variables) : void {
  // Get provided languages for the template.
  $provided_languages = $variables['entity']->get('provided_languages')->getValue();

  foreach ($provided_languages as $provided_language) {
    $variables['provided_languages'][] = $provided_language['value'];
  }
}

/**
 * Implements hook_helfi_paragraph_types().
 */
function helfi_sote_helfi_paragraph_types() : array {

  // Enable Unit accessibility information and Unit contact card paragraphs.
  $entities = [
    'tpr_unit' => [
      'tpr_unit' => [
        'field_content' => [
          'unit_accessibility_information',
          'unit_contact_card',
        ],
        'field_lower_content' => [
          'unit_accessibility_information',
          'unit_contact_card',
        ],
      ],
    ],
    'tpr_service' => [
      'tpr_service' => [
        'field_content' => [
          'unit_accessibility_information',
          'unit_contact_card',
        ],
        'field_lower_content' => [
          'unit_accessibility_information',
          'unit_contact_card',
        ],
      ],
    ],
    'node' => [
      'page' => [
        'field_content' => [
          'calculator',
          'unit_accessibility_information',
          'unit_contact_card',
        ],
        'field_lower_content' => [
          'calculator',
          'unit_accessibility_information',
          'unit_contact_card',
        ],
      ],
      'landing_page' => [
        'field_content' => [
          'unit_accessibility_information',
          'unit_contact_card',
        ],
      ],
    ],
    'paragraphs_library_item' => [
      'paragraphs_library_item' => [
        'paragraphs' => [
          'unit_accessibility_information',
          'unit_contact_card',
        ],
      ],
    ],
  ];

  $enabled = [];
  foreach ($entities as $entityTypeId => $bundles) {
    foreach ($bundles as $bundle => $fields) {
      foreach ($fields as $field => $paragraphTypes) {
        foreach ($paragraphTypes as $paragraphType) {
          $enabled[] = new ParagraphTypeCollection($entityTypeId, $bundle, $field, $paragraphType);
        }
      }
    }
  }
  return $enabled;
}
