<?php

/**
 * @file
 * Contains helfi_sote.
 */

declare(strict_types=1);

use Drupal\helfi_platform_config\DTO\ParagraphTypeCollection;

/**
 * Implements hook_preprocess_HOOK().
 */
function helfi_sote_preprocess_tpr_unit(array &$variables) : void {
  // Get provided languages for the template.
  $provided_languages = $variables['entity']->get('provided_languages')->getValue();

  foreach ($provided_languages as $provided_language) {
    $variables['provided_languages'][] = $provided_language['value'];
  }
}

/**
 * Implements hook_helfi_paragraph_types().
 */
function helfi_sote_helfi_paragraph_types() : array {

  // Enable Unit accessibility information and Unit contact card paragraphs.
  $entities = [
    'tpr_unit' => [
      'tpr_unit' => [
        'field_content' => [
          'unit_accessibility_information' => 10,
          'unit_contact_card' => 11,
        ],
        'field_lower_content' => [
          'unit_accessibility_information' => 14,
          'unit_contact_card' => 15,
        ],
      ],
    ],
    'node' => [
      'page' => [
        'field_content' => [
          'unit_accessibility_information' => 20,
          'unit_contact_card' => 21,
        ],
        'field_lower_content' => [
          'unit_accessibility_information' => 21,
          'unit_contact_card' => 22,
        ],
      ],
      'landing_page' => [
        'field_content' => [
          'unit_accessibility_information' => 18,
          'unit_contact_card' => 19,
          'health_station_search' => 20,
          'maternity_and_child_health_clini' => 21,
        ],
      ],
    ],
    'paragraphs_library_item' => [
      'paragraphs_library_item' => [
        'paragraphs' => [
          'unit_accessibility_information' => 1,
          'unit_contact_card' => 1,
        ],
      ],
    ],
  ];

  $enabled = [];
  foreach ($entities as $entityTypeId => $bundles) {
    foreach ($bundles as $bundle => $fields) {
      foreach ($fields as $field => $paragraphTypes) {
        foreach ($paragraphTypes as $paragraphType => $weight) {
          $enabled[] = new ParagraphTypeCollection($entityTypeId, $bundle, $field, $paragraphType, $weight);
        }
      }
    }
  }
  return $enabled;
}

/**
 * Implements hook_first_paragraph_grey_alter().
 */
function helfi_sote_first_paragraph_grey_alter(array &$paragraphs): void {
  $paragraphs = [
    'health_station_search',
    'maternity_and_child_health_clini',
  ];
}
