---
description: 
globs: 
alwaysApply: false
---
** GOAL **
Generate stable, unique Playwright locators for every test plan (test plans located under tests/e2e/generated_plan/plans, naming convention <feature_name>.test_plan.md) and write them to companion locators markdown files like so: tests/e2e/generated_plan/locators/<feature_name>.locators.md .

---

## Resources
It's paramount that you find the right test plan PER feature under e2e/generated_plan/plans! The plans are named like <feature_name>.test_plan.md .

You can use these resources (including but limited to) for figuring out the tests:
- The found test_plan from tests/e2e/generated_plan/plans.
- The actual feature with Playwright MCP. The base URL is https://www.hel.fi/fi/sosiaali-ja-terveyspalvelut and the path may be found from the test plan file.

---

## Instructions on creating locators

1. For each test_plan, open the page referenced in the test_plan. DO NOT CREATE LOCATORS UNLESS THE URL IS SPECIFIED.
2. Enumerate **all** elements the test interacts with and craft Playwright locators that meet the rules below.

---

## Locator rules
- **Prefer `page.getByRole()`** → supply `name`, `level`, etc. as needed.  
- Locator must resolve to **exactly one element** when a single element is expected.

---

## Output format (one file per feature)

### <Human-readable section heading, e.g. “Main navigation”>

```javascript
// Language buttons
page.getByRole('button', { name: 'Suomi' }) 
page.getByRole('button', { name: 'Svenska' })
page.getByRole('button', { name: 'English' })

// Language-specific content verification (example headings)
page.getByRole('heading', { name: 'Saavutettavuusseloste – Kerrokantasi.hel.fi' }) // Finnish
page.getByRole('heading', { name: 'Accessibility statement – Voice Your Opinion' }) // English
page.getByRole('heading', { name: 'Tillgänglighetsutlåtande – Säg Din Åsikt' }) // Swedish
```
